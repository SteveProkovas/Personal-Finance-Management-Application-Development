import sqlite3
import tkinter as tk
from tkinter import messagebox


class Database:
    def __init__(self, db_name):
        self.conn = sqlite3.connect(db_name)
        self.c = self.conn.cursor()

    def create_user(self, email, password):
        self.c.execute("INSERT INTO users (email, password) VALUES (?, ?)", (email, password))
        self.conn.commit()

    def get_user(self, email, password):
        self.c.execute("SELECT * FROM users WHERE email=? AND password=?", (email, password))
        result = self.c.fetchone()
        return result is not None


class LoginSignupWindow:
    def __init__(self, root, database):
        self.root = root
        self.database = database

        self.email_entry = None
        self.password_entry = None

        self.create_window()

    def create_window(self):
        # Create the window
        self.root.title("Login or Signup")
        self.root.geometry("400x300")
        self.root.resizable(False, False)
        self.root.config(bg="#E6F0F3")

        # Create the header label
        header_label = tk.Label(self.root, text="Νιγηριανός Πρίγκιπας", font=("Helvetica", 20), bg="#E6F0F3",
                                fg="#333333")
        header_label.pack(pady=20)

        # Create the email label and entry widget
        email_frame = tk.Frame(self.root, bg="#E6F0F3")
        email_label = tk.Label(email_frame, text="Email:", font=("Helvetica", 14), bg="#E6F0F3", fg="#333333")
        email_label.pack(side=tk.LEFT, padx=(20, 10))
        self.email_entry = tk.Entry(email_frame, font=("Helvetica", 14), bg="#FDFDFD", fg="#333333", bd=0,
                                    highlightthickness=1, highlightcolor="#333333")
        self.email_entry.pack(side=tk.LEFT, padx=(0, 20), ipadx=10, ipady=8, fill=tk.BOTH, expand=True)
        email_frame.pack(fill=tk.BOTH, padx=40, pady=(0, 20))

        # Create the password label and entry widget
        password_frame = tk.Frame(self.root, bg="#E6F0F3")
        password_label = tk.Label(password_frame, text="Password:", font=("Helvetica", 14), bg="#E6F0F3",
                                  fg="#333333")
        password_label.pack(side=tk.LEFT, padx=(20, 10))
        self.password_entry = tk.Entry(password_frame, show="*", font=("Helvetica", 14), bg="#FDFDFD", fg="#333333",
                                       bd=0, highlightthickness=1, highlightcolor="#333333")
        self.password_entry.pack(side=tk.LEFT, padx=(0, 20), ipadx=10, ipady=8, fill=tk.BOTH, expand=True)
        password_frame.pack(fill=tk.BOTH, padx=40, pady=(0, 20))

        # Create the login and signup buttons
        button_frame = tk.Frame(self.root, bg="#E6F0F3")
        login_button = tk.Button(button_frame, text="Login", font=("Helvetica", 14), bg="#4CAF50", fg="#FFFFFF",
                                 activebackground="#4CAF50", activeforeground="#FFFFFF", bd=0, highlightthickness=0,
                                 command=self.login)
        login_button.pack(side=tk.LEFT, padx=(20, 10), ipadx=10, ipady=8, fill=tk.BOTH, expand=True)
        signup_button = tk.Button(button_frame, text="Signup", font=("Helvetica", 14), bg="#2196F3", fg="#FFFFFF",
                                  activebackground="#2196F3", activeforeground="#FFFFFF", bd=0, highlightthickness=0,
                                  command=self.signup)
        signup_button.pack(side=tk.LEFT, padx=(0, 20), ipadx=10, ipady=8, fill=tk.BOTH, expand=True)
        button_frame.pack(fill=tk.BOTH, padx=40, pady=(0, 20))

        # Create the status label
        self.status_label = tk.Label(self.root, text="", font=("Helvetica", 14), bg="#E6F0F3", fg="#333333")
        self.status_label.pack()

    def login(self):
        email = self.email_entry.get()
        password = self.password_entry.get()
        if self.database.get_user(email, password):
            self.status_label.config(text="Login successful!", fg="green")
            self.open_main_window()
        else:
            self.status_label.config(text="Invalid email or password.", fg="red")

    def signup(self):
        email = self.email_entry.get()
        password = self.password_entry.get()
        # Check if the email is already registered
        if self.database.check_user_exists(email):
            self.status_label.config(text="Email already registered.", fg="red")
        else:
            self.database.create_user(email, password)
            self.status_label.config(text="Signup successful!", fg="green")
            self.open_main_window()

    def open_main_window(self):
        # Close the login/signup window
        self.root.destroy()

        # Create the main window
        root = tk.Tk()
        MainWindow(root)
        root.mainloop()


class MainWindow:
    def __init__(self, root):
        self.root = root

        self.create_window()

    def create_window(self):
        # Create the main window
        self.root.title("Investment Account")
        self.root.geometry("400x500")
        self.root.resizable(False, False)
        self.root.config(bg="#E6F0F3")

        # Create the header label
        header_label = tk.Label(self.root, text="Investment Account", font=("Helvetica", 20), bg="#E6F0F3",
                                fg="#333333")
        header_label.pack(pady=20)

        # Create the user label
        user_label = tk.Label(self.root, text="Hello User, How may I help you?", font=("Helvetica", 14),
                              bg="#E6F0F3", fg="#333333")
        user_label.pack()

        # Create the buttons for emergency fund and debt options
        emergency_fund_button = tk.Button(self.root, text="Emergency Fund", font=("Helvetica", 14), bg="#4CAF50",
                                          fg="#FFFFFF", activebackground="#4CAF50", activeforeground="#FFFFFF",
                                          bd=0, highlightthickness=0, command=self.show_emergency_fund)
        emergency_fund_button.pack(pady=10)

        debt_payment_button = tk.Button(self.root, text="Debt Payment", font=("Helvetica", 14), bg="#2196F3",
                                        fg="#FFFFFF", activebackground="#2196F3", activeforeground="#FFFFFF",
                                        bd=0, highlightthickness=0, command=self.show_debt_payment)
        debt_payment_button.pack(pady=10)

        skip_button = tk.Button(self.root, text="Skip", font=("Helvetica", 14), bg="#9E9E9E", fg="#FFFFFF",
                                activebackground="#9E9E9E", activeforeground="#FFFFFF", bd=0, highlightthickness=0,
                                command=self.show_investment_info)
        skip_button.pack(pady=10)

    def show_emergency_fund(self):
        response = messagebox.askyesno("Emergency Fund",
                                       "Do you want to know more about how to create or maximize your emergency fund?")
        if response:
            messagebox.showinfo("Emergency Fund", "Here's how you can create or maximize your emergency fund.")
        else:
            self.show_investment_info()

    def show_debt_payment(self):
        response = messagebox.askyesno("Debt Payment",
                                       "Do you want to know how to pay off your debt?")
        if response:
            messagebox.showinfo("Debt Payment", "Here's how you can pay off your debt.")
        else:
            self.show_investment_info()

    def show_investment_info(self):
        messagebox.showinfo("Investment Information", "Here's how you can open an investment account and invest your money.")


# Create the database connection
database = Database('dbusers.db')

# Create the main root window for login/signup
root = tk.Tk()
login_signup_window = LoginSignupWindow(root, database)
root.mainloop()
