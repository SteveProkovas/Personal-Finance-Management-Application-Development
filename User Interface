import sqlite3
import tkinter as tk

conn = sqlite3.connect('dbusers.db')
c = conn.cursor()

def check_user_exists(email):
    c.execute("SELECT * FROM users WHERE email=?", (email,))
    result = c.fetchone()
    return result is not None

def create_user(email, password):
    c.execute("INSERT INTO users (email, password) VALUES (?, ?)", (email, password))
    conn.commit()

def authenticate_user(email, password):
    c.execute("SELECT * FROM users WHERE email=? AND password=?", (email, password))
    result = c.fetchone()
    return result is not None

def login():
    email = email_entry.get()
    password = password_entry.get()
    if authenticate_user(email, password):
        status_label.config(text="Login successful!", fg="green")
    else:
        status_label.config(text="Invalid email or password.", fg="red")

def signup():
    email = email_entry.get()
    password = password_entry.get()
    if check_user_exists(email):
        status_label.config(text="Email already registered.", fg="red")
    else:
        create_user(email, password)
        status_label.config(text="Signup successful!", fg="green")

def show_emergency_fund():
    status_label.config(text="Here's how you can maximize your savings for an emergency fund.")

def show_debt_payment():
    status_label.config(text="Here's how you can pay off your debt.")

# Create the main window
root = tk.Tk()
root.title("Investment Account")
root.geometry("400x500")
root.resizable(False, False)
root.config(bg="#F5F5F5")

# Create the header label
header_label = tk.Label(root, text="Investment Account", font=("Helvetica", 20), bg="#F5F5F5", fg="#333333")
header_label.pack(pady=20)

# Create the user label
user_label = tk.Label(root, text="", font=("Helvetica", 14), bg="#F5F5F5", fg="#333333")
user_label.pack()

# Create the main window
root = tk.Tk()
root.title("Login or Signup")
root.geometry("400x300")
root.resizable(False, False)
root.config(bg="#F5F5F5")

# Create the header label
header_label = tk.Label(root, text="Νιγηριανός Πρίγκιπας", font=("Helvetica", 20), bg="#F5F5F5", fg="#333333")
header_label.pack(pady=20)

# Create the email label and entry widget
email_frame = tk.Frame(root, bg="#F5F5F5")
email_label = tk.Label(email_frame, text="Email:", font=("Helvetica", 14), bg="#F5F5F5", fg="#333333")
email_label.pack(side=tk.LEFT, padx=(20, 10))
email_entry = tk.Entry(email_frame, font=("Helvetica", 14), bg="#FDFDFD", fg="#333333", bd=0, highlightthickness=1, highlightcolor="#333333")
email_entry.pack(side=tk.LEFT, padx=(0, 20), ipadx=10, ipady=8, fill=tk.BOTH, expand=True)
email_frame.pack(fill=tk.BOTH, padx=40, pady=(0, 20))

# Create the password label and entry widget
password_frame = tk.Frame(root, bg="#F5F5F5")
password_label = tk.Label(password_frame, text="Password:", font=("Helvetica", 14), bg="#F5F5F5", fg="#333333")
password_label.pack(side=tk.LEFT, padx=(20, 10))
password_entry = tk.Entry(password_frame, show="*", font=("Helvetica", 14), bg="#FDFDFD", fg="#333333", bd=0, highlightthickness=1, highlightcolor="#333333")
password_entry.pack(side=tk.LEFT, padx=(0, 20), ipadx=10, ipady=8, fill=tk.BOTH, expand=True)
password_frame.pack(fill=tk.BOTH, padx=40, pady=(0, 20))

# Create the login and signup buttons
button_frame = tk.Frame(root, bg="#F5F5F5")
login_button = tk.Button(button_frame, text="Login", font=("Helvetica", 14), bg="#4CAF50", fg="#FFFFFF",
                            activebackground="#4CAF50", activeforeground="#FFFFFF", bd=0, highlightthickness=0, command=login)
login_button.pack(side=tk.LEFT, padx=(20, 10), ipadx=10, ipady=8, fill=tk.BOTH, expand=True)
signup_button = tk.Button(button_frame, text="Signup", font=("Helvetica", 14), bg="#2196F3", fg="#FFFFFF", activebackground="#2196F3",  
                            activeforeground="#FFFFFF", bd=0, highlightthickness=0, command=signup)
signup_button.pack(side=tk.LEFT, padx=(0, 20), ipadx=10, ipady=8, fill=tk.BOTH, expand=True)
button_frame.pack(fill=tk.BOTH, padx=40, pady=(0, 20))

# Create the status label
status_label = tk.Label(root, text="", font=("Helvetica", 14), bg="#F5F5F5", fg="#333333")
status_label.pack()

root.mainloop()
